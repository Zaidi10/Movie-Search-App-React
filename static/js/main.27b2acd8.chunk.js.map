{"version":3,"sources":["Components/Navbar.js","Components/FavouriteComponent.js","Components/SearchBarComponent.js","Components/LoaderComponent.js","Components/MainComponent.js","Components/DetailComponent.js","Redux/actionCreater.js","Redux/actionTypes.js","App.js","serviceWorker.js","Redux/movies.js","Redux/favorites.js","Redux/deatail.js","index.js","Redux/ConfigStore.js"],"names":["NavbarComponent","useState","isNavOpen","setNav","Navbar","dark","className","export","expand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","aria-hidden","FavouriteComponent","props","CardComp","movie","handleFav","Card","Title","CardImg","width","height","src","Poster","alt","Button","e","outline","color","Type","Year","movies","Favorites","length","map","item","key","imdbID","SearchBarComponent","search","setSearch","type","setType","dropdownOpen","setDropdownOpen","handleDropDownChange","target","value","onKeyDown","keyCode","handleSerch","placeholder","onChange","Dropdown","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","Loading","secondaryColor","isFav","favId","indexOf","MainComponent","data","handleClick","isLoading","errMess","console","log","Search","DetailComponent","fetchDetails","title","useEffect","class","imdbRating","Director","Released","Production","Country","BoxOffice","Plot","Writer","Actors","MoviesLoading","MoviesFailed","payload","MoviesRecieved","SetFavorites","favorites","DetailsFailed","DetailsRecieved","withRouter","connect","state","dispatch","fetchMovies","fetch","then","success","json","Response","undefined","Error","catch","error","message","arr","split","fetchFavorites","localStorage","getItem","fav","JSON","parse","AddFavorites","RemoveFavorites","setMovie","path","component","exact","match","detail","params","Boolean","window","location","hostname","Movies","actions","favortiesCopy1","concat","favIdCopy1","setItem","stringify","index","favortiesCopy","favIdCopy","splice","Detail","store","createStore","combineReducers","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27b2acd8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Nav, Navbar, NavbarToggler, Collapse, NavItem } from \"reactstrap\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function NavbarComponent() {\r\n    const [isNavOpen, setNav] = useState(false);\r\n    const toggleNav = () => {\r\n        setNav(!isNavOpen);\r\n    }\r\n    return (\r\n        <Navbar dark className=\"header-con\" export expand=\"md\">\r\n            <div className=\"container-fluid\">\r\n                <NavbarToggler onClick={toggleNav} />\r\n                <Collapse isOpen={isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem className=\"nav_li_item\"><NavLink className=\"nav-link\" to=\"https://github.com/Zaidi10/Movie-Search-App-React/Home\"><span className=\"fa fa-home fa-lg head-icon\"></span>Home</NavLink></NavItem>\r\n                        <NavItem className=\"nav_li_item\"><NavLink className=\"nav-link\" to=\"https://github.com/Zaidi10/Movie-Search-App-React/favorites\"><i className=\"fa fa-heart head-icon\" aria-hidden=\"true\"></i>Favorites</NavLink></NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </div>\r\n        </Navbar>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card, CardImg, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nexport default function FavouriteComponent(props) {\r\n\r\n    function CardComp({ movie, handleFav }) {\r\n\r\n\r\n        return (\r\n\r\n            <Card className=\"menu_items\">\r\n                <Link to={`/Home/${movie.Title}`} >\r\n                    <CardImg className=\"item-image\" width=\"254\" height=\"254\" src={movie.Poster} alt={movie.Title} />\r\n                </Link>\r\n                <div className=\"items-details\">\r\n                    <Button onClick={(e) => handleFav(e, movie, true)} className=\"fav-button\" outline color=\"primary\" ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></Button>\r\n                    <div className=\"item_name\">{movie.Title} ({movie.Type})\r\n              </div>\r\n                    <div className=\"item_description\">{movie.Year}</div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </Card>\r\n        );\r\n    }\r\n    var movies;\r\n    if (props.Favorites.length === 0) {\r\n        movies = (\r\n            <div className=\"col-12 loader-container\">\r\n                <h3>You have no favorites!</h3>\r\n            </div>);\r\n    }\r\n    else {\r\n\r\n        movies = props.Favorites.map(item => {\r\n\r\n\r\n            return (\r\n                <div key={item.imdbID} className=\"col-12 col-md-4 col-lg-4 col-xl-3 menu_col\">\r\n                    <CardComp movie={item} handleFav={props.handleFav} />\r\n                </div>);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid menu_container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 menu_head_col\">\r\n                    <h3>Your Favorites</h3>\r\n                    <hr className=\"hr_\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {movies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from \"reactstrap\";\r\n\r\nexport default function SearchBarComponent(props) {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [type, setType] = useState(\"title\");\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setSearch(e.target.value);\r\n    }\r\n    const handleDropDownChange = (e) => {\r\n        setType(e.target.value);\r\n\r\n    }\r\n    const handleKeyDown = (e) => {\r\n        if (e.keyCode === 13) {\r\n            props.handleSerch(search, type);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-group md-form form-sm form-2 pl-0 search-con\">\r\n            <input className=\"form-control my-0 py-1 lime-border\" onKeyDown={handleKeyDown} placeholder=\"Search\" onChange={handleChange} value={search} type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                <DropdownToggle className=\"drop_down\" caret>\r\n                    {type}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    <DropdownItem value=\"title\" onClick={handleDropDownChange}>Title</DropdownItem>\r\n                    <DropdownItem value=\"movie\" onClick={handleDropDownChange}>Movie</DropdownItem>\r\n                    <DropdownItem value=\"Series\" onClick={handleDropDownChange}>Series</DropdownItem>\r\n                    <DropdownItem value=\"year\" onClick={handleDropDownChange}>Year</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n            <Button className=\"search_button\" onClick={() => props.handleSerch(search, type)}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12 loader-container\">\r\n            <Loader\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                secondaryColor=\"#9575CD\"\r\n                height={80}\r\n                width={80}\r\n\r\n\r\n            />\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SearchBarComponent from \"./SearchBarComponent\";\r\nimport { Card, CardImg, Button } from 'reactstrap';\r\nimport { Loading } from './LoaderComponent';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CardComp({ movie, handleFav, favId }) {\r\n\r\n\r\n    const isFav = (favId.indexOf(movie.imdbID) >= 0);\r\n    return (\r\n\r\n        <Card className=\"menu_items\">\r\n            <Link to={`https://github.com/Zaidi10/Movie-Search-App-React/Home/${movie.Title}`} >\r\n                <CardImg className=\"item-image\" width=\"254\" height=\"254\" src={movie.Poster} alt={movie.Title} />\r\n            </Link>\r\n            <div className=\"items-details\">\r\n                <Button onClick={(e) => handleFav(e, movie, isFav)} className=\"fav-button\" outline color=\"primary\" >\r\n                    {isFav ?\r\n                        <span className=\"fa fa-heart\"></span>\r\n                        :\r\n                        <span className=\"fa fa-heart-o\"></span>\r\n                    }\r\n                </Button>\r\n                <div className=\"item_name\">{movie.Title} ({movie.Type})\r\n          </div>\r\n                <div className=\"item_description\">{movie.Year}</div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function MainComponent({ data, handleClick, handleFav, favId, isLoading, errMess }) {\r\n\r\n\r\n    console.log(\"err mess is\" + errMess)\r\n    var movies = \"\";\r\n    if (isLoading) {\r\n        movies = (<Loading />);\r\n    }\r\n    else if (errMess) {\r\n        console.log(\"indie err message render\")\r\n        movies = (\r\n            <div className=\"col-12 loader-container\">\r\n                <h3>{errMess}</h3>\r\n            </div>);\r\n    }\r\n    else if (data.Search) {\r\n        movies = data.Search.map(item => {\r\n\r\n            return (\r\n                <div key={item.imdbID} className=\"col-12 col-md-4 col-lg-4 col-xl-3 menu_col\">\r\n                    <CardComp handleFav={handleFav} favId={favId} movie={item} />\r\n                </div>);\r\n        })\r\n    }\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n            <SearchBarComponent handleSerch={handleClick} />\r\n\r\n\r\n            <div className=\"container-fluid menu_container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 menu_head_col\">\r\n                        <h3>Results</h3>\r\n                        <hr className=\"hr_\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {movies}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\n\r\n\r\nexport default function DetailComponent({ isLoading, movie, fetchDetails, title }) {\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(isLoading);\r\n        if (movie.Title !== title) {\r\n            console.log(\"calling fetch details\")\r\n            fetchDetails(title);\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n\r\n\r\n    }, []);\r\n    return (\r\n        <div className=\"container detail-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 menu_head_col\">\r\n                    <h3 className=\"header-deatail\">{movie.Title} <span>({movie.Year}) </span><span className=\"rat\"><i class=\"fa fa-star gol-icon\" aria-hidden=\"true\"></i>{movie.imdbRating}<span className=\"outof\">/10</span></span> </h3>\r\n\r\n                </div>\r\n                <div className=\"col-sm-4 det-img-con\"><img className=\"det-image\" src={movie.Poster} alt={movie.Title} ></img></div>\r\n                <div className=\"col-sm-8\">\r\n                    <div className=\"box-1\">\r\n                        <div className=\"detail-item\">Directed By:<span className=\"fl-r\"> {movie.Director} </span></div>\r\n                        <div className=\"detail-item\">Release Date:<span className=\"fl-r\"> {movie.Released} </span></div>\r\n                        <div className=\"detail-item\">Production:<span className=\"fl-r\"> {movie.Production} </span></div>\r\n                        <div className=\"detail-item\">Country:<span className=\"fl-r\"> {movie.Country} </span></div>\r\n                        <div className=\"detail-item\">Box Office:<span className=\"fl-r\"> {movie.BoxOffice} </span></div>\r\n                    </div>\r\n                    <div className=\"plot-con\">\r\n                        <div className=\"plot\">Plot:</div>\r\n                        <div className=\"plot-details\">{movie.Plot}</div>\r\n\r\n                    </div>\r\n                    <div className=\"box3\">\r\n                        <div className=\"det\">Writers: </div>\r\n                        <div className=\"det-sm\"> {movie.Writer}</div>\r\n                        <div className=\"det\">Actors:</div>\r\n                        <div className=\"det-sm\"> {movie.Actors}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import * as ActionTypes from \"./actionTypes\";\r\n\r\n\r\nexport const fetchMovies = (search = null, type = null) => (dispatch) => {\r\n    console.log(\"inside fetchmovies\")\r\n    console.log(search);\r\n    console.log(type);\r\n    dispatch(MoviesLoading(true));\r\n    if (search === null) {\r\n\r\n\r\n        fetch(\"https://www.omdbapi.com/?i=tt3896198&apikey=1f5816c0&s=batman\")\r\n            .then((success) => (success.json()))\r\n            .then((movies) => {\r\n                if (movies.Response === \"False\") {\r\n\r\n                    dispatch(MoviesFailed(movies.Error));\r\n                    return;\r\n                }\r\n                if (movies.Search === undefined) {\r\n                    dispatch(MoviesFailed(\"Movie not Found!\"));\r\n                    return;\r\n                }\r\n                dispatch(MoviesRecieved(movies));\r\n            })\r\n            .catch((error) => { dispatch(MoviesFailed(error.message)) });\r\n    }\r\n    else {\r\n        if (type === \"title\") {\r\n\r\n\r\n\r\n            fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=1f5816c0&s=${search}`)\r\n                .then((success) => (success.json()))\r\n                .then((movies) => {\r\n                    if (movies.Response === \"False\") {\r\n\r\n                        dispatch(MoviesFailed(movies.Error));\r\n                        return;\r\n                    }\r\n                    if (movies.Search === undefined) {\r\n                        dispatch(MoviesFailed(\"Movie not Found!\"));\r\n                        return;\r\n                    }\r\n\r\n                    dispatch(MoviesRecieved(movies));\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(MoviesFailed(error.message))\r\n                });\r\n        }\r\n        else if (type === \"year\") {\r\n            let arr = search.split(\" \");\r\n\r\n\r\n            fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=1f5816c0&s=${arr[0]}&y=${arr[1]}`)\r\n                .then((success) => (success.json()))\r\n                .then((movies) => {\r\n                    if (movies.Response === \"False\") {\r\n                        dispatch(MoviesFailed(movies.Error));\r\n                        return;\r\n                    }\r\n                    if (movies.Search === undefined) {\r\n                        dispatch(MoviesFailed(\"Movie not Found!\"));\r\n                        return;\r\n                    }\r\n\r\n                    dispatch(MoviesRecieved(movies));\r\n                })\r\n                .catch((error) => { dispatch(MoviesFailed(error.message)) });\r\n        }\r\n        else {\r\n\r\n            fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=1f5816c0&s=${search}&type=${type}`)\r\n                .then((success) => (success.json()))\r\n                .then((movies) => {\r\n                    if (movies.Response === \"False\") {\r\n                        dispatch(MoviesFailed(movies.Error));\r\n                        return;\r\n                    }\r\n                    if (movies.Search === undefined) {\r\n                        dispatch(MoviesFailed(\"Movie not Found!\"));\r\n                        return;\r\n                    }\r\n\r\n                    dispatch(MoviesRecieved(movies));\r\n                })\r\n                .catch((error) => { dispatch(MoviesFailed(error.message)) });\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const MoviesLoading = () => ({\r\n    type: ActionTypes.MOVIES_LOADING,\r\n});\r\nexport const MoviesFailed = (errMess) => ({\r\n    type: ActionTypes.MOVIES_FAILED,\r\n    payload: errMess\r\n});\r\nexport const MoviesRecieved = (movies) => ({\r\n    type: ActionTypes.MOVIES_RECIEVED,\r\n    payload: movies\r\n});\r\n\r\nexport const fetchFavorites = () => (dispatch) => {\r\n    let favorites = localStorage.getItem(\"Favorites\");;\r\n    let favId = localStorage.getItem(\"FavId\");\r\n    if (favorites) {\r\n        let fav = {\r\n            favorites: JSON.parse(favorites),\r\n            favId: JSON.parse(favId)\r\n        }\r\n        console.log(\"fav is\", fav)\r\n        dispatch(SetFavorites(fav));\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const SetFavorites = (favorites) => ({\r\n    type: ActionTypes.SET_FAVORITES,\r\n    payload: favorites\r\n});\r\n\r\nexport const AddFavorites = (favorite) => ({\r\n    type: ActionTypes.ADD_FAVORITES,\r\n    payload: favorite\r\n});\r\nexport const RemoveFavorites = (favorite) => ({\r\n    type: ActionTypes.REMOVE_FAVORITES,\r\n    payload: favorite\r\n});\r\n\r\n\r\nexport const fetchDetails = (title) => (dispatch) => {\r\n\r\n\r\n\r\n    fetch(`https://www.omdbapi.com/?i=tt3896198&apikey=1f5816c0&t=${title}`)\r\n        .then((success) => (success.json()))\r\n        .then((movies) => {\r\n            console.log(\"inside fetch\");\r\n            console.log(movies);\r\n            if (movies.Response === \"False\") {\r\n                dispatch(DetailsFailed(movies.Error));\r\n                return;\r\n            }\r\n\r\n            dispatch(DetailsRecieved(movies));\r\n        })\r\n        .catch((error) => { dispatch(DetailsFailed(error.message)) });\r\n\r\n\r\n}\r\n\r\nexport const DetailsFailed = (errMess) => ({\r\n    type: ActionTypes.DETAIL_FAILED,\r\n    payload: errMess\r\n});\r\nexport const DetailsRecieved = (movie) => ({\r\n    type: ActionTypes.DETAIL_RECIEVED,\r\n    payload: movie\r\n});","export const MOVIES_LOADING = \"MOVIES_LOADING\";\r\nexport const MOVIES_FAILED = \"MOVIES_FAILED\";\r\nexport const MOVIES_RECIEVED = \"MOVIES_RECIEVED\";\r\nexport const FETCH_FAVORITES = \"FETCH_FAVORITES\";\r\nexport const ADD_FAVORITES = \"ADD_FAVORITES\";\r\nexport const REMOVE_FAVORITES = \"REMOVES_FAVORITES\";\r\nexport const SET_FAVORITES = \"SET_FAVORITES\";\r\nexport const DETAIL_FAILED = \"DETAIL_FAILED\";\r\nexport const DETAIL_RECIEVED = \"DETAIL_RECIEVED\";","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NavbarComponent from \"./Components/Navbar\";\nimport FavouriteComponent from \"./Components/FavouriteComponent\";\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport MainComponent from \"./Components/MainComponent\";\nimport DetailComponent from \"./Components/DetailComponent\"\nimport { connect } from \"react-redux\";\nimport { fetchMovies, fetchFavorites, AddFavorites, RemoveFavorites, fetchDetails } from \"./Redux/actionCreater\"\n\n\nconst mapStatetoProps = (state) => {\n  return { ...state };\n}\nconst mapDispatchtoProps = (dispatch) => ({\n  fetchMovies: (search, type) => dispatch(fetchMovies(search, type)),\n  fetchFavorites: () => (dispatch(fetchFavorites())),\n  AddFavorites: (movie) => (dispatch(AddFavorites(movie))),\n  RemoveFavorites: (movie) => (dispatch(RemoveFavorites(movie))),\n  fetchDetails: (title) => (dispatch(fetchDetails(title)))\n})\n\n\n\n\n\nfunction App(props) {\n  let [movie, setMovie] = useState(\"Title\");\n\n\n\n\n\n  const handleFav = (e, movie, isFav) => {\n    console.log(\"calling handlefav\")\n    if (isFav) {\n\n      props.RemoveFavorites(movie);\n\n    }\n    else {\n      setMovie(movie.Title);\n      props.AddFavorites(movie);\n\n\n    }\n\n\n  }\n\n\n  useEffect(() => {\n\n\n    props.fetchMovies();\n    props.fetchFavorites();\n\n\n  }, []);\n\n\n\n  const handleClick = (search, type) => {\n\n    props.fetchMovies(search, type);\n\n\n  }\n  const RenderMain = () => {\n    return (\n      <MainComponent errMess={props.movies.errMess} isLoading={props.movies.isLoading} data={props.movies.movies} handleClick={handleClick} favId={props.favorites.favId} handleFav={handleFav} />\n    );\n\n  }\n\n\n\n  return (\n\n\n    <div className=\"App\">\n\n      <NavbarComponent />\n\n      <Switch>\n        <Route path=\"https://github.com/Zaidi10/Movie-Search-App-React/favorites\" component={() => (<FavouriteComponent Favorites={props.favorites.favorites} handleFav={handleFav} />)} />\n        <Route exact path=\"https://github.com/Zaidi10/Movie-Search-App-React/Home\" component={RenderMain} />\n        <Route path=\"https://github.com/Zaidi10/Movie-Search-App-React/Home/:title\" component={({ match }) => (<DetailComponent isLoading={props.detail.isLoading} title={match.params.title} movie={props.detail.movie} fetchDetails={props.fetchDetails} />)} />\n        <Redirect to=\"https://github.com/Zaidi10/Movie-Search-App-React/Home\" />\n      </Switch>\n    </div>\n\n\n  );\n}\n\nexport default withRouter(connect(mapStatetoProps, mapDispatchtoProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Movies = (state = { isLoading: true, errMess: null, movies: {} }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.MOVIES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, movies: {} };\r\n        case ActionTypes.MOVIES_FAILED:\r\n            return { ...state, isLoading: false, errMess: actions.payload, movies: {} };\r\n        case ActionTypes.MOVIES_RECIEVED:\r\n            return { ...state, isLoading: false, errMess: null, movies: actions.payload };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Favorites = (state = { favorites: [], favId: [] }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.SET_FAVORITES:\r\n            return { ...state, favorites: actions.payload.favorites, favId: actions.payload.favId };\r\n\r\n\r\n        case ActionTypes.ADD_FAVORITES:\r\n            let favortiesCopy1 = state.favorites.concat(actions.payload)\r\n            let favIdCopy1 = state.favId.concat(actions.payload.imdbID)\r\n            localStorage.setItem(\"Favorites\", JSON.stringify(favortiesCopy1));\r\n            localStorage.setItem(\"FavId\", JSON.stringify(favIdCopy1));\r\n            return { ...state, favorites: state.favorites.concat(actions.payload), favId: state.favId.concat(actions.payload.imdbID) };\r\n\r\n\r\n        case ActionTypes.REMOVE_FAVORITES:\r\n            let index = state.favId.indexOf(actions.payload.imdbID);\r\n            let favortiesCopy = [...state.favorites]\r\n            let favIdCopy = [...state.favId]\r\n            favortiesCopy.splice(index, 1);\r\n            favIdCopy.splice(index, 1);\r\n            localStorage.setItem(\"Favorites\", JSON.stringify(favortiesCopy));\r\n            localStorage.setItem(\"FavId\", JSON.stringify(favIdCopy));\r\n\r\n            return { ...state, favorites: favortiesCopy, favId: favIdCopy };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Detail = (state = { isLoading: true, errMess: null, movie: {} }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.DETAIL_FAILED:\r\n            return { ...state, isLoading: false, errMess: actions.payload, movie: {} };\r\n        case ActionTypes.DETAIL_RECIEVED:\r\n            return { ...state, isLoading: false, errMess: null, movie: actions.payload };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'react-notifications/lib/notifications.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./Redux/ConfigStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { Movies } from \"./movies\";\r\nimport { Favorites } from \"./favorites\"\r\nimport { Detail } from \"./deatail\"\r\n\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            movies: Movies,\r\n            favorites: Favorites,\r\n            detail: Detail\r\n\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}"],"sourceRoot":""}